---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dhub-cache
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    fluentbit.io/parser: nginx
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - "dhub-cache.MYDOMAIN"
      secretName: dhub-cache-tls
  rules:
    - host: "dhub-cache.MYDOMAIN"
      http:
        paths:
          - path: /
            backend:
              serviceName: dhub-cache-ext
              servicePort: 5000
---
kind: Service
apiVersion: v1
metadata:
  name: dhub-cache-ext
  namespace: default
spec:
  type: ExternalName
  externalName: dhub-cache.dhub-cache.svc.cluster.local
  ports:
    - port: 5000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dhub-cache
  namespace: dhub-cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 64Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dhub-cache
  namespace: dhub-cache
automountServiceAccountToken: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dhub-cache
  name: dhub-cache
  labels:
    name: dhub-cache
spec:
  replicas: 1
  selector:
    matchLabels:
      name: dhub-cache
  template:
    metadata:
      labels:
        name: dhub-cache
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      serviceAccountName: dhub-cache
      automountServiceAccountToken: false
      imagePullSecrets:
        - name: regcred
      containers:
        - image: MY-REGISTRY/dhub-cache
          name: dhub-cache
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          ports:
            - name: http
              containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            periodSeconds: 30
            timeoutSeconds: 4
            failureThreshold: 4
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            periodSeconds: 20
            timeoutSeconds: 4
            failureThreshold: 4
          env:
            - name: REGISTRY_PROXY_REMOTEURL
              value: "https://registry-1.docker.io"
            - name: REGISTRY_PROXY_USERNAME
              value: "MY-CACHE-USER"
            - name: REGISTRY_PROXY_PASSWORD
              value: "MY-CACHE-PASS"
          volumeMounts:
            - mountPath: /var/lib/registry
              name: dhub-cache
      volumes:
        - name: dhub-cache
          persistentVolumeClaim:
            claimName: dhub-cache
---
apiVersion: v1
kind: Service
metadata:
  namespace: dhub-cache
  name: dhub-cache
  labels:
    name: dhub-cache
spec:
  type: NodePort
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    name: dhub-cache
---
apiVersion: v1
data:
  .dockerconfigjson: my-reg-secret
kind: Secret
metadata:
  name: regcred
  namespace: dhub-cache
type: kubernetes.io/dockerconfigjson

